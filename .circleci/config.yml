# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

commands:
  # Exercise: Reusable Job Code
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>

# Excercise: Roll_back
  destroy_environment:
    steps:
      - run:
          name: Destroy Env.
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define the jobs we want to run for this project
jobs:
  # Exercise: Creating a Simple Workflow
  # Exercise: Environment Variables
  # Exercise: Reusable Job Code 
  print_greetings:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>
      - run: echo UPDATE
      - run: echo NEW SERVER
      - run: echo $_env_name

  create_infrastructure: 
        docker:
          - image: amazon/aws-cli
        steps:
          - checkout
          - run:
              name: Create Cloudformation Stack
              command: |
                aws cloudformation deploy \
                  --template-file template.yml \
                  --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                  --region us-east-1

  # Execute the bucket.yml - Deploy an S3 bucket and interface with that bucket to synchornise the 
  # files b/w local and the bucket. 
  create_and_deploy_front_end:
        docker:
          - image: amazon/aws-cli
        steps:
          - checkout
          - run:
              name: Executive bucket.yml - Create Cloudformation Stack
              command: |
                aws cloudformation deploy \
                  -- template-file bucket.yml \
                  -- stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
                  -- parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
          #- run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete

  smoke_test:
        docker:
          - image: amazon/aws-cli
        steps:
          - checkout
          - run:
              name: simulate_error
              command: |
                return 1  #simulate error, cause the job to fail
          - destroy_environment              

  smoke_test1:
        docker: 
          - image: alpine:latest
        steps:
          - run: apk add --update curl
          - run:
              name: smoke test
              command: |
                URL="https://blogbantu.udacity.com/"
                # test if website exist #
                if curl -s --head ${URL}
                then
                  return 0
                else 
                  return 1
                fi
# Exercise: Config and Deployment
  configure_infrastructure:
        docker:
          - image: python:3.7-alpine3.11
        steps:
          - checkout
          #add the fingerprint from the circleci - refer project settings
          - add_ssh_keys:
                  fingerprints: ["98:09:d1:89:f1:af:60:2c:e3:54:71:c7:4d:c4:f1:50"]
          - run:
              name: Install Ansible
              command: |
                apk add --update ansible
          - run:
              name: Run Playbook and configure server
              command: |
                ansible-playbook -i inventory main-remote.yml
workflows:
  # Name the workflow "welcome"
  my_workflow:
    # Run the welcome/run job in its own container
    jobs:
      # - welcome/run
      - print_greetings
      - create_and_deploy_front_end:
           requires:
            - print_greetings
     
      